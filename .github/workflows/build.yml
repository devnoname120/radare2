name: build

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  # Source Tarballs
  tarball:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Creating zip and tarball
      run: sys/tarball.sh
    - uses: actions/upload-artifact@v4
      with:
        name: tarball
        path: radare2-?.?.?.*

  # Android
  android-acr:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get --assume-yes update
        sudo apt-get --assume-yes install pax wget gperf cabextract unzip python3-wheel python3-setuptools python3-pip
        sudo pip3 install --user meson ninja --break-system-packages
    - name: Compile with acr
      run: |
        sys/android-ndk-install.sh "${{ matrix.api }}" "${{ matrix.arch }}"
        sys/android-build.sh "${{ matrix.arch }}"
        ls -l
    - uses: actions/upload-artifact@v4
      with:
        name: android-acr-${{ matrix.arch }}
        path: radare2*android*${{ matrix.arch }}.tar.gz

  # Release creation
  check_release:
    outputs:
      is_release: ${{ steps.release.outputs.is }}
      tag_name: ${{ steps.release.outputs.tag }}
    needs:
      - tarball
      - android-acr
#      - android-meson
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Download all git history and tags
      - name: Check if is a release
        run: |
          TAG="`git describe --exact-match --tags ${{ github.sha }} || true`"
          if [ -n "$TAG" ]; then
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "is=yes" >> $GITHUB_OUTPUT
          else
            echo "is=no" >> $GITHUB_OUTPUT
          fi
        id: release

  release:
    needs:
      - check_release
    runs-on: ubuntu-24.04
    env:
      ASSET_FILES: |
        dist/artifacts/tarball/*.tar.xz
        dist/artifacts/android-acr-*/*.tar.gz
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Download all git history and tags
      - name: Extract r2 version
        shell: bash
        run: echo "branch=`sys/version.py -n`" >> $GITHUB_OUTPUT
        id: r2v
      - name: Prepare release notes
        run: ./sys/release-notes.sh | tee ./RELEASE_NOTES.md
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/artifacts
      - name: Generate checksums
        run: sha256sum $ASSET_FILES | awk '{sub(".*/", "", $2); print $1"  "$2}' > checksums.txt
      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          name: ${{ steps.r2v.outputs.branch }}
          tag_name: ${{ needs.check_release.outputs.tag_name }}
          body_path: ./RELEASE_NOTES.md
          draft: false
          prerelease: false
          generate_release_notes: false
          files: |
            ${{ env.ASSET_FILES }}
            checksums.txt
